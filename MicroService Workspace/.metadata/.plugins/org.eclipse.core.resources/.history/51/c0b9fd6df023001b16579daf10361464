package com.orchestrator.controller;

import java.io.IOException;
import org.apache.poi.util.Removal;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.configurationprocessor.json.JSONException;
import org.springframework.boot.configurationprocessor.json.JSONObject;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.servlet.ModelAndView;
import com.orchestrator.model.OracleData;
import com.orchestrator.repository.OracleDataRepo;
import com.orchestrator.service.CreateRow;
import com.orchestrator.service.FindPairs;
import com.orchestrator.service.ReadOracleSheet;
import com.smartsheet.api.*;
import com.smartsheet.api.models.*;
import java.util.*;

/**
 * @author Makesh Kumar
 *
 */
@Controller
@ResponseBody
public class ReqController {


	
	@Autowired
	private OracleDataRepo oracleRepo;

	@RequestMapping("/getData")

	public List<OracleData> getData() throws SmartsheetException{
		//return new ReadOracleSheet().readOracle();
		return oracleRepo.findAll();
	}
	
	
	@RequestMapping("/getTicketData/{ticNo}")
	public ResponseEntity<?> getTicketData(@PathVariable String ticNo) throws SmartsheetException{
			
		if(oracleRepo.findByTicNo(ticNo)!=null)
		return ResponseEntity.ok(oracleRepo.findByTicNo(ticNo).get(0));
		else return ResponseEntity.ok("Null");
			
//		List<OracleData> list = new ReadOracleSheet().readOracle();
//		for(OracleData data: list) {
//			if(data.getTicNo().equals(ticNo))
//				return ResponseEntity.ok(data);
//		}		
//		return ResponseEntity.ok("Null");	
	}
	
	
	@RequestMapping("/approve/{ticNo}")
	public ModelAndView approve(@PathVariable String ticNo) throws SmartsheetException, JSONException {
		System.out.println("Approved -> " + ticNo);
		
	
		ModelAndView mv = new ModelAndView();
		mv.setViewName("approved");
		mv.addObject("ticNo", ticNo);
		OracleData data = oracleRepo.findByTicNo(ticNo).get(0);
		
		if(data.getStatus().equals("Approved")) {
			
			mv.addObject("msg", "Request Already Approved ");
		}
		else if(data.getStatus().equals("Rejected")) {
			
			mv.addObject("msg", "Request Already Rejected ");
		}
		
		else if(data.getStatus().equals("Pending")){
			//Update Mongo as status approved
			data.setStatus("Approved");
			oracleRepo.save(data);
			
			
			
			//Call UiPath to start the hour transfer..
			final String uri = "http://localhost:1880/startUiPath";
			
			RestTemplate restTemplate = new RestTemplate();
		    HttpHeaders headers = new HttpHeaders();
		    headers.setContentType(MediaType.APPLICATION_JSON);
			JSONObject jsonObj = new JSONObject();
			jsonObj.put("ticNo", ticNo);
			HttpEntity<String> request =  new HttpEntity<String>(jsonObj.toString(), headers);
			restTemplate.postForObject(uri, request, String.class);
			
			
			mv.addObject("msg", "Request Approved Successfully ");
		}
		else {
			mv.addObject("msg", "Error ");
		}	
//		OracleData data = oracleRepo.findByTicNo(ticNo);

		
		return mv;
	}
	
	@RequestMapping("/reject/{ticNo}")
	public ModelAndView reject(@PathVariable String ticNo) {
		ModelAndView mv = new ModelAndView();
		
		OracleData data = oracleRepo.findByTicNo(ticNo).get(0);
		if(data.getStatus().equals("Approved")) {
			mv.addObject("msg", "Request Already Approved");
			
			mv.setViewName("approved");
		}
		
	else if(data.getStatus().equals("Rejected")) {
			
			data.setStatus("Rejected");
			oracleRepo.save(data);
			
			mv.addObject("msg", "Request Already Rejected");
			mv.setViewName("rejectSuccess");
		}
		else if(data.getStatus().equals("Pending")) {
			
			data.setStatus("Rejected");
			oracleRepo.save(data);
			
			mv.addObject("msg", "Request Rejected Successfully");
			mv.setViewName("rejectSuccess");
		}
		else {
			mv.setViewName("approved");
			mv.addObject("msg", "Error ");
		}	
		
		
		return mv;
	}

	
	
	
	
	@RequestMapping("/addData")
	public void addDatas() {
		OracleData d = new OracleData("Values", "880350", "100817",
				"9002.1.1.2", "7", "PID To PID", "9002.2.1.3", "881109", "",
				"", "Not Started", "T100", "Move_Hours", "aaa@aaa.com", "Pending");
		
		oracleRepo.save(d);
		
	}
	
	
	
	
	@GetMapping("/start")
	public String Start() throws JSONException {
		System.out.println("Flow Started");
		final String uri = "http://localhost:1880/start";

		RestTemplate restTemplate = new RestTemplate();  
		Object result = restTemplate.getForObject(uri, Object.class);
		return "Started";
	}


/*******************************************************************************************************************/
	
	
	
	
	
	
	
	
	
	
	
	
//	@RequestMapping("/reason_to_reject/{ticNo}")
	public ModelAndView rejects(@PathVariable String ticNo)
	{
		ModelAndView mv = new ModelAndView();
		mv.setViewName("reject");
		
		OracleData data = oracleRepo.findByTicNo(ticNo).get(0);
		if(data.getStatus().equals("Approved")) {
			mv.addObject("msg", "Request Already Approved");
			mv.setViewName("approved");
		}
		else if(data.getStatus().equals("Rejected")) {
			mv.addObject("msg", "Request Already Rejected");
			//fetch reason also from mongoDb
			mv.setViewName("rejectSuccess");
		}
		else if(data.getStatus().equals("Pending")) {
	
			mv.setViewName("reject");
		}
		mv.addObject("ticNo", ticNo);
		return mv;
		
	}
	
//	@RequestMapping("/dddeject")
	public ModelAndView rej(@RequestParam("reason") String reason,@RequestParam("ticNo") String ticNo)
	{
		System.out.println("***"+reason);
		ModelAndView mv = new ModelAndView();
		mv.setViewName("rejectSuccess");
		
		OracleData data = oracleRepo.findByTicNo(ticNo).get(0);
		
		
		if(data.getStatus().equals("Pending")) {
			data.setStatus("Rejected");
			oracleRepo.save(data);
			mv.addObject("msg", "Request rejected successfully");
			mv.addObject("ticNo", ticNo);
			mv.addObject("reason", reason);
			
		}
		else if(data.getStatus().equals("Approved")) {
			mv.addObject("ticNo", ticNo);
			mv.addObject("msg", "Request already approved");
			
			
		}
		return mv;
		
	}
	

	
	
	
	
	
	
	


	@RequestMapping("/add")
	public void add() throws SmartsheetException {
	CreateRow create = new CreateRow();
	create.createRow();
	}

}
